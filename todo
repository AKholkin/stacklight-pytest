TODO
----

* Update README cmdlines to run tests (High)
* Append Base clients and Api classes with logging
  (grafana, kibana, nagios APIs, OpenStack clients) (Medium)
* Add DVR vs Contrail env type parameter into config,
  fix in tests then  (Medium):
  - dashboards smoke test(remove on dvr:['opencontrail', 'cassandra'])
  - dashboards functional tests
* Write Neutron agents test (l3, dhcp, etc; see PROD-8584) (Low)
* Write Nova Aggregators' resources test (cpu, ram usage in zones; see PROD-8869) (Low)
* Fix test naming and corresponding bonding field in Testrail (Low)
  - Write test names verifier: there should be only unique test names
    (fqtn scheme: module.Class.test) and change test_group field to fqtn
* Adapt Testrail reporter to make the process of our testing fully automated
  (use: https://github.com/gdyuldin/testrail_reporter) (Low)
* Remove custom "env_requirements" fixture, replace it
  with module "guards" filled with functions like "stacklight_tests.conftest.is_mk"
  and pytest built-in decorator pytest.mark.skipif(condition) if it's possible. (Low)
* Refactor "stacklight_tests.clients.influxdb_grafana_api.InfluxdbApi#do_influxdb_query"
  method, there is a description in the code. (Medium)
* Move "GrafanaApi" with helpers classes "Dashboard", "TemplatesTree",
  "InfluxDBQueryBuilder", "DepNode" and "get_all_grafana_dashboards_names" function
  from "stacklight_tests.clients.influxdb_grafana_api" module to separate one,
  because grafana class is not coupled with one datasource now. (Medium)
* Fix tests, that are based on "application" designated role from config,
  use class based designation
  (for example change role in parameter: 'cluster.filter_by_role("prometheus")'
   to 'cluster.filter_by_role("prometheus_server")'). (Critical)
* Isolate grafana datasource code into dedicated classes with parent Datasource class
  to remove coupled code from InfluxDB and Prometheus clients. (Low)